{"version":3,"sources":["components/users/styles/post_styled.js","components/users/user/index.js","components/users/usersData/index.js","components/users/index.js","actions/index.js","reducers/constants.js","components/addUser/styles/inputs_styled.js","components/addUser/index.js","components/Tweets/Tweet/styled.js","components/Tweets/Tweet/index.js","components/Tweets/index.js","components/addTweet/index.js","App.js","serviceWorker.js","reducers/todo.js","index.js"],"names":["Container","styled","div","Avatar","img","Ava","MainData","NickName","h3","Header","MainContent","Background","PostBlock","User","props","name","photo","nickname","date","src","userData","Users","state","users","this","res","map","curr","index","key","id","Component","connect","arr","data","forEach","push","fetchUsersDataSuccess","obj","type","payload","fetchUsersData","url","dispatch","fetch","then","response","ok","Error","statusText","json","pushUsersDataSuccess","console","log","fetchUsersTweets","fetchUsersTweetsSuccess","saveUsersTweetsSuccess","Input","input","List","select","Button","button","AddUser","avatarUrl","userName","changeName","e","setState","target","value","changeAvatar","changeUserName","onChange","placeholder","onClick","requestOptions","method","headers","body","JSON","stringify","alert","bindActionCreators","Message","PostPhotoBlock","PostPhoto","Ikons","Span","span","fon","Tweet","content","image","comments","retweets","likes","uploads","useState","countComments","setCountComments","countRetweet","setCountRetweet","countLikes","setCountLikes","setButton","class","Tweets","tweets","author","ava","changeAuthor","changeContent","changeImage","defaultChecked","axios","toLocaleLowerCase","toString","replace","catch","error","App","className","to","path","Home","Boolean","window","location","hostname","match","initialState","todoReducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.83474699.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 170px;\r\n    background-color: #15202B;\r\n    color: white;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    border-radius: 10px;\r\n    border-style: groove;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 100px; \r\n    border: 3px solid black;\r\n    box-shadow: 0 0 5px rgb(122, 122, 160); \r\n`;\r\n\r\nexport const Ava = styled.div`\r\n    display: flex;\r\n    margin: 30px;\r\n`;\r\n\r\nexport const MainData = styled.div`\r\n    display: flex;\r\n    height: 100px;\r\n    margin-top: 20px;\r\n    line-height: 0;\r\n`;\r\nexport const NickName = styled.h3`\r\n    color: rgb(93, 93, 133);;\r\n    margin-left: 40px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n    max-width: 80%;\r\n    height: 95%;\r\n    margin-top: -13px;\r\n`;\r\n\r\nexport const Background = styled.div`\r\n     background-color: rgb(179, 179, 196);\r\n`;\r\n\r\nexport const PostBlock = styled.div`\r\n    margin-bottom: 5px;\r\n`;","import React from 'react';\r\n\r\nimport { Container, Avatar, MainContent, NickName, Ava, Header, MainData} from \"../styles/post_styled.js\";\r\n\r\n\r\nfunction User(props){\r\n    const {name, photo, nickname, date} = props;\r\n\r\n    return(\r\n        <Container>\r\n            <Ava>\r\n                <Avatar src= {photo} />\r\n            </Ava>\r\n            <MainContent>\r\n                <Header>\r\n                    <MainData>\r\n                        <h2>{name}</h2>\r\n                        <NickName>{nickname} {date}</NickName>\r\n                    </MainData>\r\n                </Header>\r\n            </MainContent>\r\n            \r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","export const userData= [\r\n    {\r\n      name:'Anakin Skywalker',\r\n      photo: 'https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg',\r\n      nickname: \"@dart_vader\",\r\n    },\r\n    {\r\n      name:'Tony Stark',\r\n      photo: 'https://images.forbes.com/media/lists/fictional/2008/tonystark.jpg',\r\n      nickname: \"@tony_stark\",\r\n    },\r\n    {\r\n      name:'Arthur Shelby',\r\n      photo: 'https://img.sharetv.com/shows/characters/thumbnails/peaky_blinders_uk.arthur_shelby.jpg',\r\n      nickname: \"@arthur_shelby\",\r\n    },\r\n    {\r\n      name:'Lucifer Morningstar',\r\n      photo: 'https://api.personality-database.com/profile_images/10399.png',\r\n      nickname: \"@lucifer\",\r\n    },\r\n    {\r\n      name:'Shawn Michaels',\r\n      photo: 'https://freepngimg.com/thumb/shawn_michaels/2-2-shawn-michaels-png-thumb.png',\r\n      nickname: \"@restler_michaels\",\r\n    },\r\n    {\r\n      name:'Daenerys Targaryen',\r\n      photo: 'https://media1.tenor.com/images/625b2bbd6d0aae1f54b2ffbc3f8f6975/tenor.gif?itemid=5610505',\r\n      nickname: \"@mother_of_dragons\",\r\n    },\r\n  ]\r\n","import React, { Component } from 'react';\r\n\r\nimport User from './user/index.js';\r\nimport { userData } from './usersData/index.js';\r\nimport { Background, PostBlock } from './styles/post_styled';\r\nimport { connect } from 'react-redux'\r\n\r\nclass Users extends Component {\r\n  state = {\r\n    users: userData\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Background>\r\n        <center>\r\n        <div>\r\n          {\r\n           this.props.res.map((curr, index)=>{\r\n             return (\r\n             <PostBlock>\r\n               <User key = {curr+index} id = {index} {...curr} />\r\n              </PostBlock>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n        </center>\r\n      </Background>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n  let arr = [];\r\n  state.data.forEach( curr => arr.push(curr) );\r\n   return { res: arr };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Users);","// export const addTodo = (payload) => (dispatch)=>{\r\n//     dispatch(payload);\r\n// }\r\n\r\nimport { FETCH_USERS_DATA, SAVE_USERS_DATA, FETCH_USERS_TWEETS, SAVE_USERS_TWEETS } from '../reducers/constants';\r\n\r\nexport function fetchUsersDataSuccess(obj){\r\n    return {\r\n        type: FETCH_USERS_DATA,\r\n        payload:obj\r\n    }\r\n}\r\n\r\nexport  function fetchUsersData(url){\r\n    return (dispatch)=>{\r\n        fetch(url)\r\n        .then(response=>{\r\n            if(!response.ok){\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response;\r\n        })\r\n        .then(response=>response.json())\r\n        .then(  obj=>{\r\n             dispatch(fetchUsersDataSuccess(obj.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport function pushUsersDataSuccess(data){\r\n    console.log(data)\r\n    return{\r\n        type: SAVE_USERS_DATA,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function fetchUsersTweetsSuccess(obj){\r\n    return {\r\n        type: FETCH_USERS_TWEETS,\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport  function fetchUsersTweets(url){\r\n    return (dispatch)=>{\r\n        fetch(url)\r\n        .then(response=>{\r\n            if(!response.ok){\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response;\r\n        })\r\n        .then(response=>response.json())\r\n        .then(  obj=>{\r\n             dispatch(fetchUsersTweetsSuccess(obj.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport function saveUsersTweetsSuccess(data){\r\n    console.log(data)\r\n    return{\r\n        type: SAVE_USERS_TWEETS,\r\n        payload: data\r\n    }\r\n}\r\n\r\n","export const GET_AVAILABLE_TWITS = 'GET_AVAILABLE_TWITS';\r\nexport const FETCH_USERS_DATA = 'FETCH_USERS_DATA';\r\nexport const SAVE_USERS_DATA = 'SAVE_USERS_DATA';\r\nexport const FETCH_USERS_TWEETS = 'FETCH_USERS_TWEETS';\r\nexport const SAVE_USERS_TWEETS = 'SAVE_USERS_TWEETS';\r\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n    width: 250px;\r\n    height: 30px;\r\n    padding: 2px 3px 2px 7px;\r\n    border: 2px solid rgb(85, 85, 151);\r\n    color: white;\r\n    border-radius:3px;\r\n    background: #15202B;;\r\n    border-radius: 5px;\r\n    opacity: 0.7;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const List = styled.select`\r\n    margin-bottom: 25px;\r\n    border: 2px solid rgb(85, 85, 151);\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\nexport const Background = styled.div`\r\n     /* background-color: rgb(179, 179, 196); */\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 100px;\r\n    height: 35px;\r\n    border-radius: 5px;\r\n    border: 1px solid black;\r\n    color: white;\r\n    background-color: rgb(85, 85, 151);\r\n    margin-bottom: 50px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const PostBlock = styled.div`\r\n    margin-bottom: 50px;\r\n`;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { pushUsersDataSuccess } from '../../actions'\r\nimport { Input, Background, Button} from './styles/inputs_styled';\r\n\r\n\r\nclass AddUser extends Component {\r\n  state = {\r\n    name: '',\r\n    avatarUrl: '',\r\n    userName: ''\r\n  }\r\n\r\n\r\n  changeName = (e) => {\r\n    this.setState({ \r\n      name: e.target.value \r\n    })\r\n  }\r\n\r\n  changeAvatar = (e) => {\r\n    this.setState({ \r\n      avatarUrl: e.target.value \r\n    })\r\n}\r\n\r\n  changeUserName=(e)=>{\r\n    this.setState({ \r\n        userName: e.target.value \r\n    })\r\n  }\r\n\r\n\r\n  render () {\r\n    const { pushUsersDataSuccess } = this.props;\r\n    const saveValueInput = () => {\r\n      if(this.state.name&&this.state.avatarUrl&&this.state.userName){\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n            name: this.state.name,\r\n            nickname: this.state.userName,\r\n            photo: this.state.avatarUrl\r\n        })\r\n    };\r\n    fetch('https://77.120.108.119:9999/users/', requestOptions).then(function(res){ console.log(res) });\r\n\r\n    pushUsersDataSuccess({\r\n      name: this.state.name,\r\n      nickname: this.state.userName,\r\n      photo: this.state.avatarUrl\r\n  })\r\n\r\n  \r\n      this.setState({\r\n        name: '',\r\n        avatarUrl: '',\r\n        userName: ''\r\n      }) \r\n    }else{\r\n      alert('Some fields are empty!')\r\n    }\r\n  }\r\n   \r\n    return (\r\n        <Background>\r\n        <center>\r\n        <Input\r\n          type='text'\r\n          onChange={this.changeName} \r\n          value={this.state.name}\r\n          placeholder='Input Name*'\r\n        />\r\n        <Input\r\n          onChange={this.changeAvatar}\r\n          value={this.state.avatarUrl}\r\n          type='text' \r\n          placeholder='Input Avatar*'\r\n        />\r\n        <Input\r\n          onChange={this.changeUserName}\r\n          value={this.state.userName}\r\n          type='text' \r\n          placeholder='Input Username*'\r\n        />\r\n        <Button onClick={saveValueInput}>Add</Button>\r\n        </center>\r\n      </Background>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapActionsToProps = (dispatch)=>{\r\n  return{\r\n      pushUsersDataSuccess:bindActionCreators(pushUsersDataSuccess,dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(null,mapActionsToProps)(AddUser);","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    width: 900px;\r\n    height: 550px;\r\n    background-color: #15202B;\r\n    color: white;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    line-height: 1.2rem;\r\n    border-radius: 10px;\r\n    top: 25%;\r\n    left: 25%;\r\n    border-style: groove;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 100px; \r\n    border: 3px solid black;\r\n    box-shadow: 0 0 5px rgb(122, 122, 160); \r\n`;\r\n\r\nexport const Ava = styled.div`\r\n    display: flex;\r\n    margin: 3%;\r\n`;\r\n\r\nexport const MainData = styled.div`\r\n    display: flex;\r\n    height: 100px;\r\n    margin-top: 20px;\r\n    line-height: 0;\r\n`;\r\nexport const NickName = styled.h3`\r\n    color: rgb(93, 93, 133);;\r\n    margin-left: 40px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport const Message = styled.div`\r\n    display: flex;\r\n    line-height: 0;\r\n    font-size: 1.3rem;\r\n`;\r\n\r\nexport const PostPhotoBlock = styled.div`\r\n    margin-top: 10px;\r\n    width: 95%;\r\n    height: 70%;\r\n`;\r\n\r\nexport const PostPhoto = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    border-radius: 30px;\r\n`;\r\nexport const MainContent = styled.div`\r\n    max-width: 80%;\r\n    height: 95%;\r\n    margin-top: -13px;\r\n`;\r\n\r\nexport const Ikons = styled.div`\r\n    margin-top: 15px;\r\n    margin-right: 35px;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n    margin-left: 5px;\r\n    color: ${ props => props.fon ? 'rgb(163, 163, 236)' :'rgb(167, 167, 201)'};\r\n    cursor: pointer;\r\n    /* rgb(167, 167, 201); */\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 10px;\r\n`;\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport { Container, Avatar, MainContent, NickName, Ava, Header, MainData, Message, Span, PostPhoto, PostPhotoBlock, Ikons} from \"./styled.js\"\r\nimport './ikons.css';\r\n\r\n\r\nfunction Tweet(props){\r\n    const {name, photo, nickname, content, image, date, comments, retweets, likes, uploads} = props;\r\n    const [countComments, setCountComments] = useState(0);\r\n    const [countRetweet, setCountRetweet] = useState(0);\r\n    const [countLikes, setCountLikes] = useState(0);\r\n    const [button, setButton] = useState(false);\r\n\r\n    return(\r\n        <Container>\r\n            <Ava>\r\n                <Avatar src= {photo} />\r\n            </Ava>\r\n            <MainContent>\r\n                <Header>\r\n                    <MainData>\r\n                        <h2>{name}</h2>\r\n                        <NickName>{nickname} {date}</NickName>\r\n                    </MainData>\r\n                    <Message>\r\n                      <p>{content}</p>\r\n                    </Message>\r\n                </Header>\r\n                <PostPhotoBlock>\r\n                     <PostPhoto src={image}/>\r\n                </PostPhotoBlock>\r\n                <Ikons>\r\n                    <i onClick={() => setCountComments(countComments >= 1 ? countComments-1 : countComments+1)} \r\n                       class=\"fa fa-comment\"\r\n                    >  <Span fon = {button} onClick={()=>setButton(!button)}>{comments + countComments}</Span>\r\n                    </i>\r\n                      \r\n                    <i onClick={() => setCountRetweet(countRetweet >= 1 ? countRetweet-1 : countRetweet+1 )} \r\n                       class=\"fa fa-retweet\"\r\n                    >  <Span >{retweets + countRetweet}</Span>\r\n                    </i>\r\n\r\n                    <i onClick={() => setCountLikes(countLikes >= 1 ? countLikes-1 : countLikes+1)} \r\n                       class=\"fas fa-heart\"\r\n                    >  <Span>{likes + countLikes}</Span>\r\n                    </i>\r\n\r\n                    <i class=\"fas fa-upload\"><Span>{uploads}</Span></i>\r\n                </Ikons>\r\n            </MainContent>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Tweet;\r\n","import React, { Component } from 'react';\r\n\r\nimport Tweet from './Tweet';\r\nimport { PostBlock } from '../users/styles/post_styled';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Tweets extends Component {\r\n  render () {\r\n    return (\r\n        <center>\r\n        <div>\r\n          {\r\n           this.props.res.map((curr, index)=>{\r\n             return (\r\n             <PostBlock>\r\n               <Tweet \r\n               key = {index} \r\n               comments = {10}\r\n               retweets = {40}\r\n               likes = {100} \r\n               id = {index} \r\n               {...curr} \r\n               name = {curr.name}\r\n               />\r\n              </PostBlock>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n        </center>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n  let arr = [];\r\n  state.tweets.forEach( curr => arr.push(curr) );\r\n   return { res: arr };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Tweets);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport axios from 'axios';\r\n\r\nimport { saveUsersTweetsSuccess } from '../../actions'\r\nimport { Input, Background, Button, List } from '../../components/addUser/styles/inputs_styled';\r\n\r\n\r\nclass AddUser extends Component {\r\n  state = {\r\n    author: '',\r\n    content: '',\r\n    image: '',\r\n    ava: ''\r\n  }\r\n\r\n\r\n  changeAuthor = (e) => {\r\n    this.setState({ \r\n      author: e.target.value \r\n    })\r\n  }\r\n\r\n  changeContent = (e) => {\r\n    this.setState({ \r\n      content: e.target.value \r\n    })\r\n}\r\n\r\n  changeImage=(e)=>{\r\n    this.setState({ \r\n        image: e.target.value \r\n    })\r\n  }\r\n\r\n\r\n  render () {\r\n    const { saveUsersTweetsSuccess } = this.props;\r\n    const saveValueInput = () => {\r\n      if(this.state.content&&this.state.image&&this.state.author){\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: 'https://77.120.108.119:9999/tweets/',\r\n                data:{\r\n                    content:this.state.content,\r\n                    image : this.state.image,\r\n                    name: this.state.author,\r\n                    nickname: \"@\" + this.state.author.toLocaleLowerCase().toString().replace(/\\s/g, ''),\r\n                    photo: this.state.author === 'Harry Poter'? (this.state.ava = 'https://api.time.com/wp-content/uploads/2014/07/301386_full1.jpg?w=600&quality=85') : \r\n                      this.state.author === 'John Cena'? (this.state.ava = 'https://sun6-16.userapi.com/c846020/v846020635/71579/UKw0hOXcuFs.jpg?ava=1') : \r\n                      this.state.author === 'Thomas Shelby'? (this.state.ava = 'https://sun9-18.userapi.com/c854324/v854324158/163df5/Y52VCm9baHc.jpg?ava=1') : \"\"\r\n                \r\n                }\r\n            })\r\n            .then(function (data) {  \r\n                console.log('Request succeeded with JSON response', data);  \r\n              }) \r\n              .catch(function (error) {  \r\n                console.log('Request failed', error);  \r\n              })\r\n\r\n\r\n            saveUsersTweetsSuccess({\r\n                    name: this.state.author,\r\n                    content: this.state.content,\r\n                    image : this.state.image,\r\n                    nickname: \"@\" + this.state.author.toLocaleLowerCase().toString().replace(/\\s/g, ''),\r\n                    photo: this.state.author === 'Harry Poter'? (this.state.ava = 'https://api.time.com/wp-content/uploads/2014/07/301386_full1.jpg?w=600&quality=85') : \r\n                      this.state.author === 'John Cena'? (this.state.ava = 'https://sun6-16.userapi.com/c846020/v846020635/71579/UKw0hOXcuFs.jpg?ava=1') : \r\n                      this.state.author === 'Thomas Shelby'? (this.state.ava = 'https://sun9-18.userapi.com/c854324/v854324158/163df5/Y52VCm9baHc.jpg?ava=1') : \"\"\r\n\r\n            })                        \r\n\r\n            this.setState({\r\n                content:'',\r\n                author:'',\r\n                image: ''\r\n            })\r\n        }else{\r\n            alert('Some fields are empty or not found this user!')\r\n        }\r\n      }\r\n   \r\n    return (\r\n        <Background>\r\n        <center>\r\n        <Input\r\n          onChange={this.changeContent}\r\n          value={this.state.content}\r\n          type='text' \r\n          placeholder='Content*'\r\n        />\r\n        <Input\r\n          onChange={this.changeImage}\r\n          value={this.state.image}\r\n          type='text' \r\n          placeholder='Image url*'\r\n        />\r\n        <List onChange={this.changeAuthor}>\r\n              <option defaultChecked>--Choose--</option>\r\n              <option value=\"Harry Poter\"> Harry Poter </option>\r\n              <option value=\"John Cena\"> John Cena </option>\r\n              <option value=\"Thomas Shelby\"> Thomas Shelby </option>\r\n        </List> \r\n        <Button onClick={saveValueInput}>Add</Button>\r\n        </center>\r\n      </Background>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapActionsToProps = (dispatch)=>{\r\n  return{\r\n    saveUsersTweetsSuccess: bindActionCreators(saveUsersTweetsSuccess,dispatch)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n  let arr = [];\r\n  state.tweets.forEach( curr => arr.push(curr) );\r\n  return { res: arr, data:state.data };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionsToProps)(AddUser);","import React,{Component} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n\nimport './App.css';\nimport Users from './components/users';\nimport AddUser from './components/addUser';\nimport Tweets from './components/Tweets';\nimport AddTweet from './components/addTweet';\nimport { fetchUsersData, fetchUsersDataSuccess, fetchUsersTweets } from './actions'\n\nclass App extends Component{\n  componentDidMount(){\n    this.props.fetchUsersData('https://77.120.108.119:9999/users/');\n    this.props.fetchUsersTweets('https://77.120.108.119:9999/tweets/')\n }\n  render(){\n  return (\n    <div className = \"App\">\n    <Router>\n      <div className = \"header\">\n          <ul className = \"menu\">\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">Users</Link>\n            </li>\n            <li>\n              <Link to=\"/addUser\">Add user</Link>\n            </li>\n            <li>\n              <Link to=\"/tweets\">Tweets</Link>\n            </li>\n            <li>\n              <Link to=\"/addTweet\">Add tweet</Link>\n            </li>\n          </ul>\n          </div>\n        <Switch>\n          <Route path=\"/users\">\n            <Users />\n          </Route>\n          <Route path=\"/addUser\">\n            <AddUser />\n          </Route>\n          <Route path=\"/Tweets\">\n            <Tweets />\n          </Route>\n          <Route path=\"/addTweet\">\n            <AddTweet />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n    </Router>\n    </div>\n  );\n  }\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nconst mapActionsToProps = (dispatch)=>{\n  return{\n    fetchUsersTweets : bindActionCreators (fetchUsersTweets,dispatch),\n      fetchUsersData: bindActionCreators(fetchUsersData,dispatch),\n      fetchUsersDataSuccess: bindActionCreators( fetchUsersDataSuccess, dispatch )\n  }\n}\n\nexport default connect(null,mapActionsToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {FETCH_USERS_DATA, SAVE_USERS_DATA, FETCH_USERS_TWEETS, SAVE_USERS_TWEETS } from './constants';\r\nimport { userData } from '../components/users/usersData'\r\n\r\nlet initialState = {\r\n    data: userData,\r\n    tweets: []\r\n}\r\nconst todoReducer = (state=initialState, action)=>{\r\n    switch(action.type) {\r\n        case FETCH_USERS_DATA:\r\n            state.data = action.payload;\r\n            return {...state}\r\n\r\n        case SAVE_USERS_DATA:\r\n            state.data.push(action.payload);\r\n            return {...state}\r\n\r\n        case FETCH_USERS_TWEETS:\r\n            return {...state, tweets: action.payload}\r\n    \r\n        case SAVE_USERS_TWEETS:\r\n            state.tweets.push(action.payload);\r\n            console.log(state.tweets)\r\n            return {...state}\r\n        default:\r\n            return state    \r\n    }\r\n}\r\n export default todoReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport todoReducer from './reducers/todo';\n\nconst store = createStore(\n  todoReducer,\n  composeWithDevTools(applyMiddleware(...[thunk]))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}